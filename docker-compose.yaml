name: salesyx

services:
  postgres:
    image: postgres:16
    restart: unless-stopped
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - dokploy-network

  pgvector:
    image: pgvector/pgvector:pg16
    restart: unless-stopped
    ports:
      - ${PGVECTOR_PORT:-5433}
    volumes:
      - pgvector-data:/var/lib/postgresql/data
    networks:
      - dokploy-network
    environment:
      - POSTGRES_DB=${PGVECTOR_DB:-postgres}
      - POSTGRES_USER=${PGVECTOR_USER:-postgres}
      - POSTGRES_PASSWORD=${PGVECTOR_PASSWORD}

  ollama:
    image: ollama/ollama:0.3.4
    restart: unless-stopped
    pull_policy: always
    tty: true
    depends_on:
      - postgres
      - pgvector
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - dokploy-network
    # environment:
    #  - OLLAMA_HOST=0.0.0.0
    # GPU support (turn on if you have nvidia gpu
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities:
    #             - gpu

  open-webui:
    image: ghcr.io/open-webui/open-webui:${WEBUI_DOCKER_TAG:-main}
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      - dokploy-network
    volumes:
      - open-webui-data:/app/backend/data
    depends_on:
      - ollama
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - OLLAMA_API_BASE_URL=http://ollama:11434/api
      # - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY:-topsecret}
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.${HASH}.rule=Host(`${WEBUI_HOST}`)
      - traefik.http.services.${HASH}.loadbalancer.server.port=${WEBUI_PORT}

  langflow:
    image: langflowai/langflow:latest
    restart: unless-stopped
    depends_on:
      - ollama
    ports:
      - ${LANGFLOW_PORT:-7860}
    volumes:
      - langflow-data:/app/langflow
    networks:
      - dokploy-network
    environment:
      - LANGFLOW_AUTO_LOGIN=false
      - LANGFLOW_SUPERUSER=${LANGFLOW_SUPERUSER}
      - LANGFLOW_SUPERUSER_PASSWORD=${LANGFLOW_SUPERUSER_PASSWORD}
      - LANGFLOW-DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-postgres}
      - LANGFLOW_STORE_ENVIRONMENT_VARIABLES=true
      - LANGFLOW_VARIABLES_TO_GET_FROM_ENVIRONMENT=PGVECTOR_URL,OLLAMA_HOST,${LANGFLOW_VARIABLES_TO_GET_FROM_ENVIRONMENT}
      - PGVECTOR_URL=postgresql://${PGVECTOR_USER:-postgres}:${PGVECTOR_PASSWORD}@pgvector:${PGVECTOR_PORT:-5433}/${PGVECTOR_DB:-postgres}
      - OLLAMA_HOST=http://ollama:11434
    labels:
      - traefik.enable=true
      - traefik.http.routers.langflow-${HASH}.rule=Host(`${LANGFLOW_HOST}`)
      - traefik.http.services.langflow-${HASH}.loadbalancer.server.port=${LANGFLOW_PORT:-7860}

networks:
  # name need to be exact "dokploy-network" for Dokploy
  dokploy-network:
    external: true

volumes:
  postgres-data:
  pgvector-data:
  ollama-data:
  langflow-data:
  open-webui-data:
